import logging
from telegram import Update, InputMediaPhoto, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7670617089:AAF-Mj6RwmnOBMjxdvOcOTA8ca8T4A5M9hs"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏ —Ñ–æ—Ç–æ.")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç–∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    user_data = context.user_data

    if message.text and not message.photo:
        user_data['title'] = message.text
        await message.reply_text("–û—Ç–ø—Ä–∞–≤—å –¥–æ 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.")
    elif message.photo:
        user_data.setdefault('photos', [])
        user_data['photos'].append(message.photo[-1].file_id)
        if len(user_data['photos']) >= 3:
            await confirm_submission(update, context)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
async def confirm_submission(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data="confirm")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ]
    await update.message.reply_text("–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É?", reply_markup=InlineKeyboardMarkup(keyboard))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_data = context.user_data

    if query.data == "confirm":
        caption = f"üì¶ <b>{user_data.get('title', '')}</b>"
        media = [InputMediaPhoto(media=pid, caption=caption if i == 0 else '') for i, pid in enumerate(user_data.get("photos", []))]

        await context.bot.send_media_group(chat_id="@findemand", media=media)
        await query.edit_message_text("‚úÖ –ê–Ω–∫–µ—Ç–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.")
    else:
        await query.edit_message_text("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT | filters.PHOTO, handle_message))
    app.add_handler(CallbackQueryHandler(button_handler))

    app.run_polling()

if __name__ == "__main__":
    main()